* org-mode

** #: org-block
#+BEGIN_${1:SRC} $2
#+END_$1

** --: org-list-with-checkbox
- [ ] $0

** src: org-mode-code-block
#+BEGIN_SRC ${1:emacs-lisp}
#+END_SRC

** example: org-mode-example-block
#+BEGIN_EXAMPLE
#+END_EXAMPLE

** math: Latex math environment
\begin{displaymath}
$0
\end{displaymath}

** elisp: org-mode-elisp-code-block
#+BEGIN_SRC emacs-lisp :results output silent
  $0
#+END_SRC

** title: org-mode-title-setting
#+TITLE: $0

** author: org-mode-author-setting
#+AUTHOR: Pang Tun Jiang

** email: org-mode-email-setting
#+EMAIL: pang.t@nus.edu.sg

* prog-mode
These comments are generally highlighted using hl-todo
** c: Comment                                                          :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "BUG: ")`
#+END_SRC

** bb: Bug                                                             :src:

#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "BUG: ")`
#+END_SRC

** dd: Debug                                                           :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "DEBUG: ")`
#+END_SRC

** ff: Fixme                                                           :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "FIXME: ")`
#+END_SRC

** hh: Hack                                                            :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "HACK: ")`
#+END_SRC

** nn: Note                                                            :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "NOTE: ")`
#+END_SRC

** rr: Remove                                                          :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "REMOVE: ")`
#+END_SRC

** ss: Stub                                                            :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "STUB: ")`
#+END_SRC

** tt: Todo                                                            :src:
#+BEGIN_SRC emacs-lisp :results output silent
`(yas-with-comment "TODO: ")`
#+END_SRC

* python-mode

** l: python-lambda                                                    :src:
#+BEGIN_SRC python
lambda $1: $0
#+END_SRC

** ifm: if __main__                                                    :src:
#+BEGIN_SRC python
  if __name__ == "__main__":
      $0
#+END_SRC

** init: __init__                                                      :src:

#+BEGIN_SRC python
  def __init__(self$1):
      $0
#+END_SRC

** d: multiline string                                                 :src:
#+BEGIN_SRC python
  """$0
#+END_SRC

* rust-mode

** l: rust-lambda                                                      :src:
#+BEGIN_SRC rust
|$1| ${2:{$3}}
#+END_SRC
